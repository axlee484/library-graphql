datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

model Book {
  id          Int      @id @default(autoincrement())
  isbn        String   @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  authors BooksAndAuthors[]
  genres  BooksAndGenres[]
}

model Author {
  id        Int               @id @default(autoincrement())
  name      String            @unique
  email     String?
  createdAt DateTime          @default(now()) @map("created_at")
  updatedAt DateTime          @updatedAt @map("updated_at")
  books     BooksAndAuthors[]
}

model Genre {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
  books     BooksAndGenres[]
}

model BooksAndAuthors {
  id Int @id @default(autoincrement())

  book_id   Int
  author_id Int
  book      Book   @relation(fields: [book_id], references: [id], onDelete: Cascade)
  author    Author @relation(fields: [author_id], references: [id], onDelete: Restrict)

  @@unique([book_id, author_id])
}

model BooksAndGenres {
  book_id  Int
  genre_id Int
  book     Book  @relation(fields: [book_id], references: [id], onDelete: Cascade)
  genre    Genre @relation(fields: [genre_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([book_id, genre_id])
}
